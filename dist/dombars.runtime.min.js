!function(e){if("object"==typeof exports)module.exports=e();else if("function"==typeof define&&define.amd)define(e);else{var f;"undefined"!=typeof window?f=window:"undefined"!=typeof global?f=global:"undefined"!=typeof self&&(f=self),f.DOMBars=e()}}(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);throw new Error("Cannot find module '"+o+"'")}var f=n[o]={exports:{}};t[o][0].call(f.exports,function(e){var n=t[o][1][e];return s(n?n:e)},f,f.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){
var hbsBase=require("handlebars/dist/cjs/handlebars/base"),Utils=require("./utils"),HandlebarsEnvironment=hbsBase.HandlebarsEnvironment,base=module.exports=Utils.create(hbsBase),wrapOldHelper=function(e){return function(){var r=e.apply(this,arguments);return null==r?r:r.value}},registerDefaultHelpers=function(e){e.registerHelper("each",function(e,r){var t,n=r.fn,a=r.inverse,s=document.createDocumentFragment(),i=0;if("function"==typeof e&&(e=e.call(this)),r.data&&(t=Utils.create(r.data)),"object"==typeof e){var l=e.length;if(l===+l)for(;l>i;i++)t.index=i,t.first=0===i,t.last=i===l-1,s.appendChild(n(e[i],{data:t}).value);else for(var o in e)Object.prototype.hasOwnProperty.call(e,o)&&(i+=1,t.key=o,t.index=i,t.first=0===i,s.appendChild(n(e[o],{data:t}).value))}return 0===i?a(this).value:s}),e.registerHelper({"if":wrapOldHelper(e.helpers.if),"with":wrapOldHelper(e.helpers.with),blockHelperMissing:wrapOldHelper(e.helpers.blockHelperMissing)})},DOMBarsEnvironment=base.DOMBarsEnvironment=function(){HandlebarsEnvironment.apply(this,arguments),registerDefaultHelpers(this)},envPrototype=DOMBarsEnvironment.prototype=Utils.create(HandlebarsEnvironment.prototype);envPrototype.createFrame=hbsBase.createFrame,envPrototype.REVISION_CHANGES=hbsBase.REVISION_CHANGES,envPrototype.COMPILER_REVISION=hbsBase.COMPILER_REVISION,envPrototype.get=function(e,r){return e[r]},envPrototype.subscribe=envPrototype.unsubscribe=function(){};
},{"./utils":7,"handlebars/dist/cjs/handlebars/base":8}],2:[function(require,module,exports){
module.exports=require("handlebars/dist/cjs/handlebars/exception").default;
},{"handlebars/dist/cjs/handlebars/exception":9}],3:[function(require,module,exports){
var global=typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {};var currentTime=global.Date.now||function(){var e=global.Date;return function(){return(new e).getTime()}}(),setTimer=global.setTimeout,clearTimer=global.clearTimeout,fallback=function(){var e=currentTime();return function(a){var l=currentTime(),n=Math.max(0,16-(l-e)),o=setTimer(a,n);return e=l,o}};exports=module.exports=global.requestAnimationFrame||global.webkitRequestAnimationFrame||global.mozRequestAnimationFrame||global.msRequestAnimationFrame||global.oRequestAnimationFrame||fallback();var cancel=global.cancelAnimationFrame||global.webkitCancelAnimationFrame||global.mozCancelAnimationFrame||global.msCancelAnimationFrame||global.oCancelAnimationFrame||clearTimer;exports.cancel=function(e){cancel.call(global,e)};
},{}],4:[function(require,module,exports){
var hbsVM=require("handlebars/dist/cjs/handlebars/runtime"),Utils=require("./utils"),raf=require("./raf"),attrProps={INPUT:{value:"value",checked:"checked"},OPTION:{selected:"selected"}},iterateSubscriptions=function(t,e,i){for(var n in t)for(var r in t[n])e.call(i,t[n][r],r,n)},Subscription=function(t,e,i,n){this._fn=t,this._update=e,this._container=i,this._env=n,this.cid="c"+Utils.uniqueId(),this.children={},this.subscriptions={},this.unsubscriptions=[],this.boundUpdate=Utils.bind(this.update,this),this.boundUnsubscription=Utils.bind(this.unsubscription,this)};Subscription.prototype.subscribe=function(t,e,i){(this.subscriptions[i]||(this.subscriptions[i]={}))[e]=t},Subscription.prototype.unsubscription=function(t){Utils.isFunction(t)&&this.unsubscriptions.push(t)},Subscription.prototype._unsubscribe=function(t){iterateSubscriptions(t,function(e,i,n){delete t[n][i],this._env.unsubscribe(e,i,this.boundUpdate)},this)},Subscription.prototype._unsubscription=function(t){for(var e=0;e<t.length;e++)t[e]()},Subscription.prototype.unsubscribe=function(){this._unsubscribe(this.subscriptions),this._unsubscription(this.unsubscriptions),this.parent&&(delete this.parent.children[this.cid],delete this.parent),VM.exec.cancel(this._execId),this._unsubscribed=!0,this._unsubscribeChildren(),delete this.children,delete this.subscriptions,delete this.unsubscriptions,delete this._fn,delete this._env,delete this._update,delete this._container,delete this.boundUpdate,delete this.boundUnsubscription},Subscription.prototype._unsubscribeChildren=function(){for(var t in this.children)this.children[t].unsubscribe()},Subscription.prototype.execute=function(){this._container.subscription&&(this.parent=this._container.subscription,this.parent.children[this.cid]=this),this._subscriptions=this.subscriptions,this._unsubscription(this.unsubscriptions),this.subscriptions={},this.unsubscriptions=[],this._container.subscription=this;var t=this._fn.apply(this,arguments);this._container.subscription=this.parent;var e=this.subscriptions,i=this._subscriptions;return iterateSubscriptions(e,function(t,e,n){return i[n]&&i[n][e]?delete i[n][e]:(this._env.subscribe(t,e,this.boundUpdate),void 0)},this),delete this._subscriptions,this._unsubscribe(i),t},Subscription.prototype.update=function(){return this._triggered||this._unsubscribed?!1:(this._triggered=!0,this._unsubscribeChildren(),this._execId=VM.exec(Utils.bind(function(){delete this._triggered,this._update(this.execute())},this)),!0)};var VM=module.exports=Utils.create(hbsVM);VM.exec=function(t){return raf(t)},VM.exec.cancel=function(t){return raf.cancel(t)},VM.createElement=function(t){return document.createElement(t)},VM.setTagName=function(t,e){for(var i=VM.createElement(e);t.firstChild;)i.appendChild(t.firstChild);for(var n=0;n<t.attributes.length;n++){var r=t.attributes[n];VM.setAttribute(i,r.name,r.value)}return t.parentNode.replaceChild(i,t),i},VM.removeAttribute=function(t,e){t.hasAttribute(e)&&(t.removeAttribute(e),attrProps[t.tagName]&&attrProps[t.tagName][e]&&(t[attrProps[t.tagName][e]]=null))},VM.setAttribute=function(t,e,i){return i===!1?VM.removeAttribute(t,e):(t.setAttribute(e,i===!0?e:i),attrProps[t.tagName]&&attrProps[t.tagName][e]&&(t[attrProps[t.tagName][e]]=i),void 0)},VM.createComment=function(t){return document.createComment(t)},VM.template=function(t,e){var i=function(t,i,n){var s=new Subscription(t,n,r,e);return s.value=s.execute(),Utils.isFunction(i)&&(s.value=i(s.value)),s},n=function(t){var i=function(){var i=new Subscription(t,null,r,e);return{value:i.execute.apply(i,arguments),unsubscribe:Utils.bind(i.unsubscribe,i)}};return Utils.extend(i,t),i},r={invokePartial:VM.invokePartial,programs:[],noop:VM.noop,partial:Utils.partial,wrapProgram:n,escapeExpression:Utils.escapeExpression,programWithDepth:VM.programWithDepth},s=function(t,e){return i(t,function(t){return Utils.trackNode(e(t))},function(t){this.value.replace(e(t))}).value.fragment};return r.createElement=function(t,n){return i(t,function(t){return VM.createElement(t,e)},function(t){n(this.value=VM.setTagName(this.value,t,e))}).value},r.appendChild=function(t,e){e&&t.appendChild(e)},r.setAttribute=function(t,e,n){var r=i(e,null,function(e){VM.removeAttribute(t(),this.value),VM.setAttribute(t(),this.value=e,s.value)}),s=i(n,null,function(e){VM.setAttribute(t(),r.value,this.value=e)});return VM.setAttribute(t(),r.value,s.value)},r.createDOM=function(t){return s(t,Utils.domifyExpression)},r.createText=function(t){return s(t,Utils.textifyExpression)},r.createComment=function(t){return i(t,function(t){return VM.createComment(t)},function(t){this.value.textContent=t}).value},r.program=function(t,e,i){var n=r.programs[t];return i?VM.program(t,e,i):n?n:r.programs[t]=VM.program(t,e)},r.merge=function(t,e){var i=t||e;return t&&e&&t!==e&&(i={},Utils.extend(i,e),Utils.extend(i,t)),i},r.get=function(t,i,n){return r.subscription.subscribe(t,i,n),e.get(t,i)},n(function(i,n){n=n||{};var s,u,o=n.partial?n:e;n.partial||(s=n.helpers,u=n.partials);var c=t.call(r,o,i,s,u,n.data);return n.partial||e.VM.checkRevision(r.compilerInfo),c})};
},{"./raf":3,"./utils":7,"handlebars/dist/cjs/handlebars/runtime":10}],5:[function(require,module,exports){
module.exports=require("handlebars/dist/cjs/handlebars/safe-string").default;
},{"handlebars/dist/cjs/handlebars/safe-string":11}],6:[function(require,module,exports){
var TrackNode=module.exports=function(e){this.fragment=document.createDocumentFragment(),this.before=this.fragment.appendChild(document.createTextNode("")),this.after=this.fragment.appendChild(document.createTextNode("")),e&&this.appendChild(e)};TrackNode.prototype.appendChild=function(e){return this.after.parentNode.insertBefore(e,this.after),this},TrackNode.prototype.prependChild=function(e){return this.before.parentNode.insertBefore(e,this.before.nextSibling),this},TrackNode.prototype.empty=function(){for(;this.before.nextSibling!==this.after;)this.before.parentNode.removeChild(this.before.nextSibling);return this},TrackNode.prototype.remove=function(){for(;this.before.nextSibling!==this.after;)this.fragment.appendChild(this.before.nextSibling);return this.fragment.appendChild(this.after),this.fragment.insertBefore(this.before,this.fragment.firstChild),this},TrackNode.prototype.replace=function(e){return this.empty().appendChild(e)};
},{}],7:[function(require,module,exports){
var hbsUtils=require("handlebars/dist/cjs/handlebars/utils"),uniqueId=0,TrackNode=require("./track-node"),SafeString=require("./safe-string"),__slice=Array.prototype.slice,create=Object.create||function(){var e=function(){};return function(t){e.prototype=t;var r=new e;return e.prototype=null,r}}(),Utils=module.exports=create(hbsUtils);Utils.uniqueId=function(){return uniqueId++},Utils.variadic=function(e){var t=Math.max(e.length-1,0);return function(){var r=__slice.call(arguments,0,t);return r.length=t,r.push(__slice.call(arguments,t)),e.apply(this,r)}},Utils.partial=Utils.variadic(function(e,t){return Utils.variadic(function(r){return e.apply(this,t.concat(r))})}),Utils.bind=Utils.variadic(function(e,t,r){return Utils.variadic(function(n){return e.apply(t,r.concat(n))})}),Utils.create=create,Utils.isNode=function(e){return e instanceof Node},Utils.trackNode=function(e){return new TrackNode(e)},Utils.domifyExpression=function(e){if(e instanceof SafeString&&(e=e.string),Utils.isNode(e))return e;var t=document.createElement("div");if(t.innerHTML=e,1===t.childNodes.length)return t.removeChild(t.childNodes[0]);for(var r=document.createDocumentFragment();t.firstChild;)r.appendChild(t.firstChild);return r},Utils.textifyExpression=function(e){if(e instanceof SafeString)return Utils.domifyExpression(e.string);if(Utils.isNode(e)){if(3===e.nodeType)return e;if("string"==typeof e.outerHTML)return document.createTextNode(e.outerHTML);var t=document.createElement("div");return t.appendChild(e.cloneNode(!0)),document.createTextNode(t.innerHTML)}return document.createTextNode(null==e?"":e)};
},{"./safe-string":5,"./track-node":6,"handlebars/dist/cjs/handlebars/utils":12}],8:[function(require,module,exports){
"use strict";
var Utils = require("./utils");
var Exception = require("./exception")["default"];

var VERSION = "1.3.0";
exports.VERSION = VERSION;var COMPILER_REVISION = 4;
exports.COMPILER_REVISION = COMPILER_REVISION;
var REVISION_CHANGES = {
  1: '<= 1.0.rc.2', // 1.0.rc.2 is actually rev2 but doesn't report it
  2: '== 1.0.0-rc.3',
  3: '== 1.0.0-rc.4',
  4: '>= 1.0.0'
};
exports.REVISION_CHANGES = REVISION_CHANGES;
var isArray = Utils.isArray,
    isFunction = Utils.isFunction,
    toString = Utils.toString,
    objectType = '[object Object]';

function HandlebarsEnvironment(helpers, partials) {
  this.helpers = helpers || {};
  this.partials = partials || {};

  registerDefaultHelpers(this);
}

exports.HandlebarsEnvironment = HandlebarsEnvironment;HandlebarsEnvironment.prototype = {
  constructor: HandlebarsEnvironment,

  logger: logger,
  log: log,

  registerHelper: function(name, fn, inverse) {
    if (toString.call(name) === objectType) {
      if (inverse || fn) { throw new Exception('Arg not supported with multiple helpers'); }
      Utils.extend(this.helpers, name);
    } else {
      if (inverse) { fn.not = inverse; }
      this.helpers[name] = fn;
    }
  },

  registerPartial: function(name, str) {
    if (toString.call(name) === objectType) {
      Utils.extend(this.partials,  name);
    } else {
      this.partials[name] = str;
    }
  }
};

function registerDefaultHelpers(instance) {
  instance.registerHelper('helperMissing', function(arg) {
    if(arguments.length === 2) {
      return undefined;
    } else {
      throw new Exception("Missing helper: '" + arg + "'");
    }
  });

  instance.registerHelper('blockHelperMissing', function(context, options) {
    var inverse = options.inverse || function() {}, fn = options.fn;

    if (isFunction(context)) { context = context.call(this); }

    if(context === true) {
      return fn(this);
    } else if(context === false || context == null) {
      return inverse(this);
    } else if (isArray(context)) {
      if(context.length > 0) {
        return instance.helpers.each(context, options);
      } else {
        return inverse(this);
      }
    } else {
      return fn(context);
    }
  });

  instance.registerHelper('each', function(context, options) {
    var fn = options.fn, inverse = options.inverse;
    var i = 0, ret = "", data;

    if (isFunction(context)) { context = context.call(this); }

    if (options.data) {
      data = createFrame(options.data);
    }

    if(context && typeof context === 'object') {
      if (isArray(context)) {
        for(var j = context.length; i<j; i++) {
          if (data) {
            data.index = i;
            data.first = (i === 0);
            data.last  = (i === (context.length-1));
          }
          ret = ret + fn(context[i], { data: data });
        }
      } else {
        for(var key in context) {
          if(context.hasOwnProperty(key)) {
            if(data) { 
              data.key = key; 
              data.index = i;
              data.first = (i === 0);
            }
            ret = ret + fn(context[key], {data: data});
            i++;
          }
        }
      }
    }

    if(i === 0){
      ret = inverse(this);
    }

    return ret;
  });

  instance.registerHelper('if', function(conditional, options) {
    if (isFunction(conditional)) { conditional = conditional.call(this); }

    // Default behavior is to render the positive path if the value is truthy and not empty.
    // The `includeZero` option may be set to treat the condtional as purely not empty based on the
    // behavior of isEmpty. Effectively this determines if 0 is handled by the positive path or negative.
    if ((!options.hash.includeZero && !conditional) || Utils.isEmpty(conditional)) {
      return options.inverse(this);
    } else {
      return options.fn(this);
    }
  });

  instance.registerHelper('unless', function(conditional, options) {
    return instance.helpers['if'].call(this, conditional, {fn: options.inverse, inverse: options.fn, hash: options.hash});
  });

  instance.registerHelper('with', function(context, options) {
    if (isFunction(context)) { context = context.call(this); }

    if (!Utils.isEmpty(context)) return options.fn(context);
  });

  instance.registerHelper('log', function(context, options) {
    var level = options.data && options.data.level != null ? parseInt(options.data.level, 10) : 1;
    instance.log(level, context);
  });
}

var logger = {
  methodMap: { 0: 'debug', 1: 'info', 2: 'warn', 3: 'error' },

  // State enum
  DEBUG: 0,
  INFO: 1,
  WARN: 2,
  ERROR: 3,
  level: 3,

  // can be overridden in the host environment
  log: function(level, obj) {
    if (logger.level <= level) {
      var method = logger.methodMap[level];
      if (typeof console !== 'undefined' && console[method]) {
        console[method].call(console, obj);
      }
    }
  }
};
exports.logger = logger;
function log(level, obj) { logger.log(level, obj); }

exports.log = log;var createFrame = function(object) {
  var obj = {};
  Utils.extend(obj, object);
  return obj;
};
exports.createFrame = createFrame;
},{"./exception":9,"./utils":12}],9:[function(require,module,exports){
"use strict";

var errorProps = ['description', 'fileName', 'lineNumber', 'message', 'name', 'number', 'stack'];

function Exception(message, node) {
  var line;
  if (node && node.firstLine) {
    line = node.firstLine;

    message += ' - ' + line + ':' + node.firstColumn;
  }

  var tmp = Error.prototype.constructor.call(this, message);

  // Unfortunately errors are not enumerable in Chrome (at least), so `for prop in tmp` doesn't work.
  for (var idx = 0; idx < errorProps.length; idx++) {
    this[errorProps[idx]] = tmp[errorProps[idx]];
  }

  if (line) {
    this.lineNumber = line;
    this.column = node.firstColumn;
  }
}

Exception.prototype = new Error();

exports["default"] = Exception;
},{}],10:[function(require,module,exports){
"use strict";
var Utils = require("./utils");
var Exception = require("./exception")["default"];
var COMPILER_REVISION = require("./base").COMPILER_REVISION;
var REVISION_CHANGES = require("./base").REVISION_CHANGES;

function checkRevision(compilerInfo) {
  var compilerRevision = compilerInfo && compilerInfo[0] || 1,
      currentRevision = COMPILER_REVISION;

  if (compilerRevision !== currentRevision) {
    if (compilerRevision < currentRevision) {
      var runtimeVersions = REVISION_CHANGES[currentRevision],
          compilerVersions = REVISION_CHANGES[compilerRevision];
      throw new Exception("Template was precompiled with an older version of Handlebars than the current runtime. "+
            "Please update your precompiler to a newer version ("+runtimeVersions+") or downgrade your runtime to an older version ("+compilerVersions+").");
    } else {
      // Use the embedded version info since the runtime doesn't know about this revision yet
      throw new Exception("Template was precompiled with a newer version of Handlebars than the current runtime. "+
            "Please update your runtime to a newer version ("+compilerInfo[1]+").");
    }
  }
}

exports.checkRevision = checkRevision;// TODO: Remove this line and break up compilePartial

function template(templateSpec, env) {
  if (!env) {
    throw new Exception("No environment passed to template");
  }

  // Note: Using env.VM references rather than local var references throughout this section to allow
  // for external users to override these as psuedo-supported APIs.
  var invokePartialWrapper = function(partial, name, context, helpers, partials, data) {
    var result = env.VM.invokePartial.apply(this, arguments);
    if (result != null) { return result; }

    if (env.compile) {
      var options = { helpers: helpers, partials: partials, data: data };
      partials[name] = env.compile(partial, { data: data !== undefined }, env);
      return partials[name](context, options);
    } else {
      throw new Exception("The partial " + name + " could not be compiled when running in runtime-only mode");
    }
  };

  // Just add water
  var container = {
    escapeExpression: Utils.escapeExpression,
    invokePartial: invokePartialWrapper,
    programs: [],
    program: function(i, fn, data) {
      var programWrapper = this.programs[i];
      if(data) {
        programWrapper = program(i, fn, data);
      } else if (!programWrapper) {
        programWrapper = this.programs[i] = program(i, fn);
      }
      return programWrapper;
    },
    merge: function(param, common) {
      var ret = param || common;

      if (param && common && (param !== common)) {
        ret = {};
        Utils.extend(ret, common);
        Utils.extend(ret, param);
      }
      return ret;
    },
    programWithDepth: env.VM.programWithDepth,
    noop: env.VM.noop,
    compilerInfo: null
  };

  return function(context, options) {
    options = options || {};
    var namespace = options.partial ? options : env,
        helpers,
        partials;

    if (!options.partial) {
      helpers = options.helpers;
      partials = options.partials;
    }
    var result = templateSpec.call(
          container,
          namespace, context,
          helpers,
          partials,
          options.data);

    if (!options.partial) {
      env.VM.checkRevision(container.compilerInfo);
    }

    return result;
  };
}

exports.template = template;function programWithDepth(i, fn, data /*, $depth */) {
  var args = Array.prototype.slice.call(arguments, 3);

  var prog = function(context, options) {
    options = options || {};

    return fn.apply(this, [context, options.data || data].concat(args));
  };
  prog.program = i;
  prog.depth = args.length;
  return prog;
}

exports.programWithDepth = programWithDepth;function program(i, fn, data) {
  var prog = function(context, options) {
    options = options || {};

    return fn(context, options.data || data);
  };
  prog.program = i;
  prog.depth = 0;
  return prog;
}

exports.program = program;function invokePartial(partial, name, context, helpers, partials, data) {
  var options = { partial: true, helpers: helpers, partials: partials, data: data };

  if(partial === undefined) {
    throw new Exception("The partial " + name + " could not be found");
  } else if(partial instanceof Function) {
    return partial(context, options);
  }
}

exports.invokePartial = invokePartial;function noop() { return ""; }

exports.noop = noop;
},{"./base":8,"./exception":9,"./utils":12}],11:[function(require,module,exports){
"use strict";
// Build out our basic SafeString type
function SafeString(string) {
  this.string = string;
}

SafeString.prototype.toString = function() {
  return "" + this.string;
};

exports["default"] = SafeString;
},{}],12:[function(require,module,exports){
"use strict";
/*jshint -W004 */
var SafeString = require("./safe-string")["default"];

var escape = {
  "&": "&amp;",
  "<": "&lt;",
  ">": "&gt;",
  '"': "&quot;",
  "'": "&#x27;",
  "`": "&#x60;"
};

var badChars = /[&<>"'`]/g;
var possible = /[&<>"'`]/;

function escapeChar(chr) {
  return escape[chr] || "&amp;";
}

function extend(obj, value) {
  for(var key in value) {
    if(Object.prototype.hasOwnProperty.call(value, key)) {
      obj[key] = value[key];
    }
  }
}

exports.extend = extend;var toString = Object.prototype.toString;
exports.toString = toString;
// Sourced from lodash
// https://github.com/bestiejs/lodash/blob/master/LICENSE.txt
var isFunction = function(value) {
  return typeof value === 'function';
};
// fallback for older versions of Chrome and Safari
if (isFunction(/x/)) {
  isFunction = function(value) {
    return typeof value === 'function' && toString.call(value) === '[object Function]';
  };
}
var isFunction;
exports.isFunction = isFunction;
var isArray = Array.isArray || function(value) {
  return (value && typeof value === 'object') ? toString.call(value) === '[object Array]' : false;
};
exports.isArray = isArray;

function escapeExpression(string) {
  // don't escape SafeStrings, since they're already safe
  if (string instanceof SafeString) {
    return string.toString();
  } else if (!string && string !== 0) {
    return "";
  }

  // Force a string conversion as this will be done by the append regardless and
  // the regex test will do this transparently behind the scenes, causing issues if
  // an object's to string has escaped characters in it.
  string = "" + string;

  if(!possible.test(string)) { return string; }
  return string.replace(badChars, escapeChar);
}

exports.escapeExpression = escapeExpression;function isEmpty(value) {
  if (!value && value !== 0) {
    return true;
  } else if (isArray(value) && value.length === 0) {
    return true;
  } else {
    return false;
  }
}

exports.isEmpty = isEmpty;
},{"./safe-string":11}],13:[function(require,module,exports){
var base=require("./lib/base"),SafeString=require("./lib/safe-string"),Exception=require("./lib/exception"),Utils=require("./lib/utils"),runtime=require("./lib/runtime");module.exports=function e(){var i=new base.DOMBarsEnvironment;return Utils.extend(i,base),i.VM=runtime,i.Utils=Utils,i.create=e,i.Exception=Exception,i.SafeString=SafeString,i.template=function(e){return runtime.template(e,i)},i}();
},{"./lib/base":1,"./lib/exception":2,"./lib/runtime":4,"./lib/safe-string":5,"./lib/utils":7}]},{},[13])
(13)
});